"""
Django settings for portal project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from configurations import Configuration
from configurations import values

class Dev(Configuration):
  

    #########################
    SCHEDULE_DAY = 1
    COMPANY_NAME = "Roboco"
    #Days
    CHAT_RETENTION_DAYS = 60
    FILES_RETENTION_DAYS = 90
    


    ADMINS = [("Blob", os.environ.get('ADMIN_MAIL'))]
    SERVER_EMAIL = "server@example.com"
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = os.environ.get('ADMIN_EMAIL')
    EMAIL_HOST_PASSWORD = os.environ.get('ADMIN_EMAIL_PASS')
    EMAIL_USE_TLS = True


    BASE_DIR = Path(__file__).resolve().parent.parent
    MAX_UPLOAD_SIZE = 2 * 1024 * 1024  # 2MB

    LOGIN_URL = '/'
    LOGOUT_REDIRECT_URL = '/'
    LOGIN_REDIRECT_URL = 'dashboard:role_dispatch'

    INTERNAL_IPS = [
    '127.0.0.1',
    ]

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')
    CELERY_RESULT_BACKEND =	"django-db"
    CELERY_BROKER_URL =	"redis://127.0.0.1:6379/0"
    CACHES = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://127.0.0.1:6379/1',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            }
        }
    }
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = [ '*' ]

   
 
    # Application definition

    INSTALLED_APPS = [
        'django_celery_results',
        'debug_toolbar',
        'crispy_bootstrap5',
        'crispy_forms',
        'django_apscheduler',
        'dashboard.apps.DashboardConfig',
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
    ]
    CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
    CRISPY_TEMPLATE_PACK = "bootstrap5"

    MIDDLEWARE = [
        'whitenoise.middleware.WhiteNoiseMiddleware',
        'debug_toolbar.middleware.DebugToolbarMiddleware',
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'portal.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [BASE_DIR/"templates"],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'dashboard.context_processor.unread_messages_count',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'portal.wsgi.application'

    # Database
    # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

        
    import environ
    env = environ.Env()
    env.read_env()
# 
    DATABASES = {
        'default': env.db()
    }




    # Password validation
    # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

    AUTH_USER_MODEL = 'dashboard.Users'
    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # SESSIONS 
    # Time in seconds (e.g., 2 hours = 7200 seconds)
    SESSION_COOKIE_AGE = 7200

    # Expire session when browser closes
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True

    # Optional: Use database-backed sessions
    SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'



    # Internationalization
    # https://docs.djangoproject.com/en/5.2/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'America/Toronto'

    USE_I18N = True

    USE_TZ = True


    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/5.2/howto/static-files/

    STATIC_URL = 'static/'
    MEDIA_URL = '/media/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    # Default primary key field type
    # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

   
class Prod(Dev):
    CELERY_BROKER_URL =	"redis://redis:6379/0"
    DEBUG = False
    ALLOWED_HOSTS = values.ListValue([])
    SECRET_KEY = values.SecretValue()
    CACHES = {
        'default': {
            'BACKEND': 'django_redis.cache.RedisCache',
            'LOCATION': 'redis://redis:6379/1',
            'OPTIONS': {
                'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            }
        }
    }
   
    
    SCHEDULE_DAY = values.PositiveIntegerValue()

    LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters':{
         'require_debug_false':{
            "()": "django.utils.log.RequireDebugFalse", 
         },
    },
    'formatters':{
        'verbose': {
            "format":"{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },

    },
    'handlers': {
        'console':{
            "class": "logging.StreamHandler",
            "stream": "ext://sys.stdout",
            "formatter": "verbose",
        },
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': 'django_errors.log',
            'formatter': 'verbose',
        },
        'mail_admins': {
            "level": "ERROR",
            "class": "django.utils.log.AdminEmailHandler",
            "filters": ['require_debug_false'],

        },
    },
    'loggers': {
        'django.request':{
            'handlers': ['mail_admins'],
            'level':'ERROR',
            'propagate': True,

        },
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
     'root': {

            'handlers': ['console'],
            'level': 'DEBUG',

        },
  }
    #########TWILIO ##############
    TWILIO_ACCCOUNT_SID = values.Value()
    TWILIO_AUTH_TOKEN = values.Value()
    TWILIO_MSG_SID = values.Value()